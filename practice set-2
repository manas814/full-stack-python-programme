{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "34af5174-4f2a-452f-ab38-7f32811a4588",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "even\n"
     ]
    }
   ],
   "source": [
    "number=4\n",
    "if number%2==0:\n",
    "   print(\"even\")\n",
    "else:\n",
    "   print(\"odd\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "38cb3a56-0ef0-47ca-ae8a-d2630e8dd6c5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Divisible by both 3 and 5\n"
     ]
    }
   ],
   "source": [
    "number=45\n",
    "if number % 3 == 0 and number % 5 == 0:\n",
    " print(\"Divisible by both 3 and 5\")\n",
    "else:\n",
    " print(\"not Divisible by both 3 and 5\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "1b7cf769-1665-42c9-8d2b-114d7911275e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pass\n"
     ]
    }
   ],
   "source": [
    "mark1=75\n",
    "mark2=36\n",
    "mark3=36\n",
    "if mark1 >= 35 and mark2 >= 35 and mark3 >= 35:\n",
    " print(\"pass\")\n",
    "else: \n",
    " print(\"fail\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8573f94a-df3e-4809-83f8-4129ff9ed200",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
